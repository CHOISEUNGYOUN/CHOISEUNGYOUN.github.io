{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL-Day23:-Code-Kata-11(JS-&-PY)/","webpackCompilationHash":"248c59a2e6068b6aa341","result":{"data":{"markdownRemark":{"id":"86bcd422-b308-57fb-a79b-4d3d23a760a1","html":"<p><em><strong><u>필자는 현재 Python을 이용한 Backend 공부를 시작했기에, 모든 Code Kata 문제들을 JS와 PY로 풀어 올리도록 하겠다.</u></strong></em></br>\n<em>Javascript의 풀이와 Python의 풀이는 다를 수 있습니다!</em></p>\n<h2 id=\"문제\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>두 개의 input에 복소수(complex number)가 string 으로 주어집니다.\n복소수란 a+bi 의 형태로, 실수와 허수로 이루어진 수입니다.</p>\n<p>input으로 받은 두 수를 곱해서 반환해주세요.\n반환하는 표현도 복소수 형태의 string 이어야 합니다.</p>\n<p>복소수 정의에 의하면 (i^2)는 -1 이므로 (i^2) 일때는 -1로 계산해주세요.</p>\n<ul>\n<li>제곱 표현이 안 되어 i의 2제곱을 (i^2)라고 표현했습니다.</li>\n</ul>\n<p><strong>*가정</strong></br></p>\n<p>input은 항상 a+bi 형태입니다.\noutput도 a+bi 형태로 나와야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">예제 1:\nInput: &quot;1+1i&quot;, &quot;1+1i&quot;\nOutput: &quot;0+2i&quot;\n설명: \n(1 + i) * (1 + i) = 1 + i + i + i^2 = 2i \n2i를 복소수 형태로 바꾸면 0+2i.\n\n예제 2:\nInput: &quot;1+-1i&quot;, &quot;1+-1i&quot;\nOutput: &quot;0+-2i&quot;\n설명: \n(1 - i) * (1 - i) = 1 - i - i + i^2 = -2i, \n-2i를 복소수 형태로 바꾸면 0+-2i.\n\n예제 3:\nInput: &quot;1+3i&quot;, &quot;1+-2i&quot;\nOutput: &quot;7+1i&quot;\n설명: \n(1 + 3i) * (1 - 2i) = 1 - 2i + 3i -6(i^2) = 1 + i + 6, \n7+i를 복소수 형태로 바꾸면 7+1i.```\n\n### Javascript\n\n```Javascript\nconst complexNumberMultiply = (a, b) =&gt; {\n    let a_container = a.split(/[-,+]/);\n    let b_container = b.split(/[-,+]/);\n    if(a_container.indexOf(&#39;&#39;) &gt; -1){\n      const empty_a = a_container.indexOf(&#39;&#39;);\n      a_container.splice(empty_a,1)\n    } \n    if(b_container.indexOf(&#39;&#39;) &gt; -1){\n      const empty_b = b_container.indexOf(&#39;&#39;);\n      b_container.splice(empty_b,1)\n    }\n    a_container[1] = a_container[1].slice(0,a_container[1].length-1)\n    b_container[1] = b_container[1].slice(0,b_container[1].length-1)\n    a_container = a_container.map(Number);\n    b_container = b_container.map(Number);\n    let a_operator = [];\n    let b_operator = [];\n    for(let i = 0; i &lt; a.length; i++){\n        if(a[i] === &#39;+&#39; || a[i] === &#39;-&#39;){\n            a_operator.push(a[i])\n        }   \n    }\n    for(let i = 0; i &lt; b.length; i++){\n        if(b[i] === &#39;+&#39; || b[i] === &#39;-&#39;){\n            b_operator.push(b[i])\n        }   \n    }\n\n    if(a_operator.length === 2){\n        a_container[1] = -1 * a_container[1]\n    }\n    if(b_operator.length === 2){\n        b_container[1] = -1 * b_container[1]\n    }\n\n    let container1 = []; // 첫번쨰: 정수끼리, 두번째: 정수*i, 세번째: i의 제곱 1 + i + i + i^2 = 2i \n    container1[0] = a_container[0] * b_container[0]\n    container1[1] = a_container[0] * b_container[1] + b_container[0] * a_container[1]\n    container1[2] = a_container[1] * b_container[1]\n    \n    let result = [];\n    result[0] = container1[0] - container1[2]\n    result[1] = container1[1]\n    \n    console.log(result)\n    return `${result[0]}+${result[1]}i`\n}</code></pre></div>\n<h3 id=\"python\"><a href=\"#python\" aria-label=\"python permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">complexNumberMultiply</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  a  <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span>\n  a1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  a2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  b  <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span>\n  b1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  b2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  \n  result <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>a1 <span class=\"token operator\">*</span> b1 <span class=\"token operator\">-</span> a2 <span class=\"token operator\">*</span> b2<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span> <span class=\"token string\">'+'</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>a1 <span class=\"token operator\">*</span> b2 <span class=\"token operator\">+</span> a2 <span class=\"token operator\">*</span> b1<span class=\"token punctuation\">}</span></span><span class=\"token string\">i'</span></span>\n  <span class=\"token keyword\">return</span> result</code></pre></div>\n<p><em>프로젝트 마무리 한다고 솔직히 신경을 못썼다… 반성하자</em></p>","fields":{"slug":"/posts/TIL-Day23:-Code-Kata-11(JS-&-PY)/","tagSlugs":["/tag/python/","/tag/javascript/","/tag/algorithm/","/tag/code-kata/"]},"frontmatter":{"date":"2019-08-21T22:40:32.169Z","description":"Wecode Code Kata day11","tags":["Python","Javascript","Algorithm","Code Kata"],"title":"TIL - Day23: Code Kata-11(JS & PY) "}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/TIL-Day23:-Code-Kata-11(JS-&-PY)/"}}}