{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL - Day8: Python Intro/","webpackCompilationHash":"c848ef73353bfe84fd5d","result":{"data":{"markdownRemark":{"id":"f04fb750-339c-5255-9293-9c0e22b56db7","html":"<!-- - [The first transition](#the-first-transition) -->\n<p>오늘부터 백엔드로 진로를 결정 함에 따라, 백엔드 관련하여 가장 선호되는 파이썬을 공부하기 시작했다. 기존에 공부했던 Javascript와는 또 다른점이 많은 언어이기에, 파이썬 언어에 대한 기본적인 특징들을 한번 서술 해 보려고 한다.</p>\n<h3 id=\"1-파이썬--interpreter\"><a href=\"#1-%ED%8C%8C%EC%9D%B4%EC%8D%AC--interpreter\" aria-label=\"1 파이썬  interpreter permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 파이썬 == Interpreter</h3>\n<p>파이썬 또한 3세대 언어라고 부를 수 있는 인터프리터이다. 사람이 직관적으로 이해 할 수 있는 명령어 set들로 구성 되어 있으며, 파이썬 언어내 엔진을 통하여 어셈블리어로 변환 해 준다. 보통 인터프리터 계열 언어들은 인터프리터 → 컴파일러 → 어셈블러 과정을 거치는데, 이러한 이유로 인해 인터프리팅 언어들이 컴파일 언어나 어셈블리 언어보다 느리다고 이야기 한다. 하지만, 파이썬을 컴파일 할 수 있는 방법이 있다고 하니 차후에 확인을 해보도록 하겠다. </p>\n<p><em>이 방법을 이용하면 기존 컴파일러가 지배하는 분야(FA,Factory Automation 등과 같은 임베디드 솔루션 분야)에서도 충분히 적용 가능하다. 실제 적용사례도 많다.</em></p>\n<p><em>실제 적용 예 :</em>\n<em><a href=\"https://www.youtube.com/watch?v=v_VopUT9jmM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Universal Robot</a> &#x26; <a href=\"https://www.youtube.com/watch?v=BuQ30X4ust8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Kuka Robotics</a></em></p>\n<h3 id=\"2-간단명료함을-추구한다\"><a href=\"#2-%EA%B0%84%EB%8B%A8%EB%AA%85%EB%A3%8C%ED%95%A8%EC%9D%84-%EC%B6%94%EA%B5%AC%ED%95%9C%EB%8B%A4\" aria-label=\"2 간단명료함을 추구한다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 간단명료함을 추구한다.</h3>\n<p>PEP(Python Enhancement Proposal) 20에 나와있듯이, 간단명료함을 극단적으로 추구하는 언어이다.</p>\n<blockquote>\n<p>“아름다운게 추한 것보다 낫다.” (Beautiful is better than ugly)</br>\n“명시적인 것이 암시적인 것 보다 낫다.” (Explicit is better than implicit)</br>\n“단순함이 복잡함보다 낫다.” (Simple is better than complex)</br>\n“복잡함이 난해한 것보다 낫다.” (Complex is better than complicated)</br>\n“가독성은 중요하다.” (Readability counts)</br></p>\n</blockquote>\n<p>이처럼 다른 언어대비 진입장벽을 확실하게 낮추면서 효율을 극대화 시키려고 하는 철학이 엿보인다. 그러한 특징이 문법에 잘 나타나있어 기존 언어를 이미 능숙하게 다루시는 분들에게는 익숙하지 않을 수도 있다.</p>\n<p>본격적인 파이썬을 탐구하기 이전에 이러한 특징들을 이해하고 시작을 해보려고 한다. 이제 출발!</p>","fields":{"slug":"/posts/TIL - Day8: Python Intro/","tagSlugs":["/tag/python/"]},"frontmatter":{"date":"2019-08-06T22:40:32.169Z","description":"Python에 대한 주요한 특징 및 철학","tags":["Python"],"title":"TIL - Day8: Python Intro"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/TIL - Day8: Python Intro/"}}}