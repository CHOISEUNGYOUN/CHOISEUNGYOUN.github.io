{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/sql-like-operator/","webpackCompilationHash":"8c617b978a6ab38d6dac","result":{"data":{"markdownRemark":{"id":"e1c673d5-a0a0-530b-818d-608fd0e41966","html":"<h4 id=\"this-post-will-be-written-in-english-so-that-i-could-grind-my-technical-writing-please-send-me-feedback-via-my-email-if-anything-wrong-\"><a href=\"#this-post-will-be-written-in-english-so-that-i-could-grind-my-technical-writing-please-send-me-feedback-via-my-email-if-anything-wrong-\" aria-label=\"this post will be written in english so that i could grind my technical writing please send me feedback via my email if anything wrong  permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>This post will be written in English so that I could grind my technical writing. Please send me feedback via my email if anything wrong :)</h4>\n<h2 id=\"sql-like-operator\"><a href=\"#sql-like-operator\" aria-label=\"sql like operator permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL Like Operator</h2>\n<p>Most of times, you need to search or filter data in SQL DB to get raw data with <code class=\"language-text\">WHERE</code> operator as data pre-processing. I’m sure it’s much easier implementing <code class=\"language-text\">Regex</code> in your webserver, but it might be better filtering it out in SQL statement. <br/>\nIn this case, <code class=\"language-text\">LIKE</code> operator helps you a lot! Let’s see how it works. <br/></p>\n<h4 id=\"where-like-your-statement-with-wildcards\"><a href=\"#where-like-your-statement-with-wildcards\" aria-label=\"where like your statement with wildcards permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">WHERE LIKE ...(your statement with wildcards)</code></h4>\n<p>First off, there are reserved words, called <code class=\"language-text\">wildcards</code>. the syntax vary from your SQL license, so you need to check your SQL version. Basic rules are as follows:</p>\n<table>\n<thead>\n<tr>\n<th>Symbol</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">%</code></td>\n<td>Represents zero or more characters</td>\n<td><code class=\"language-text\">bl%</code> finds bl, black, blue, and blob</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\_</code></td>\n<td>Represents a single character</td>\n<td><code class=\"language-text\">h_t</code> finds hot, hat, and hit</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">[]</code></td>\n<td>Represents any single character within the brackets</td>\n<td><code class=\"language-text\">h[oa]t</code> finds hot and hat, but not hit</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">^</code></td>\n<td>Represents any character not in the brackets</td>\n<td><code class=\"language-text\">h[^oa]t</code> finds hit, but not hot and hat</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">-</code></td>\n<td>Represents a range of characters</td>\n<td><code class=\"language-text\">c[a-b]t</code> finds cat and cbt</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<p>As you can see, most of case, that’s enough to combine <code class=\"language-text\">%</code> and <code class=\"language-text\">[]</code> combinations when you extract row including your <code class=\"language-text\">string</code>. To myself, I’ve used this a lot when I need to process log data to see which url users acceess to.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n  <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span>\n  account<span class=\"token punctuation\">.</span>user_log\n<span class=\"token keyword\">WHERE</span>\n<span class=\"token operator\">LIKE</span> request_path <span class=\"token string\">'https://www.w3schools.com/%'</span>\n<span class=\"token comment\">-- it returns rows including 'https://www.w3schools.com/'</span></code></pre></div>\n<p>Likewise, it helps you get pre-processed rows so that you can process further in your webserver!</p>\n<p>*Reference:<br/>\n<a href=\"https://www.w3schools.com/sql/sql_like.asp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">W3S Schools - SQL LIKE Operator</a><br/>\n<a href=\"https://www.w3schools.com/sql/sql_wildcards.asp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">W3S Schools - SQL Wildcard Characters</a></p>","fields":{"slug":"/posts/sql-like-operator/","tagSlugs":["/tag/sql/","/tag/sql-like/","/tag/sql-wildcards/","/tag/wecode/"]},"frontmatter":{"date":"2020-07-11T12:40:32.169Z","description":"How SQL LIKE Operator works & get to know about wildcards","tags":["SQL","SQL LIKE","SQL Wildcards","Wecode"],"title":"SQL LIKE Operator"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/sql-like-operator/"}}}