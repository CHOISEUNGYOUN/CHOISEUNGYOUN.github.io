{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/queue/","webpackCompilationHash":"b95cfacd74a4b2a01fd9","result":{"data":{"markdownRemark":{"id":"e560a233-1faa-5762-a030-f6dcb30d3402","html":"<h4 id=\"최근에-이직한-직장은-ruby-on-rails를-사용한다-위코드-동기분들-중-루비로-자료구조를-공부하시는-분이-계시길래-필자도-공부할-겸-자료구조를-조악하게나마-구현해보았다\"><a href=\"#%EC%B5%9C%EA%B7%BC%EC%97%90-%EC%9D%B4%EC%A7%81%ED%95%9C-%EC%A7%81%EC%9E%A5%EC%9D%80-ruby-on-rails%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C%EB%8B%A4-%EC%9C%84%EC%BD%94%EB%93%9C-%EB%8F%99%EA%B8%B0%EB%B6%84%EB%93%A4-%EC%A4%91-%EB%A3%A8%EB%B9%84%EB%A1%9C-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0%EB%A5%BC-%EA%B3%B5%EB%B6%80%ED%95%98%EC%8B%9C%EB%8A%94-%EB%B6%84%EC%9D%B4-%EA%B3%84%EC%8B%9C%EA%B8%B8%EB%9E%98-%ED%95%84%EC%9E%90%EB%8F%84-%EA%B3%B5%EB%B6%80%ED%95%A0-%EA%B2%B8-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0%EB%A5%BC-%EC%A1%B0%EC%95%85%ED%95%98%EA%B2%8C%EB%82%98%EB%A7%88-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EC%95%98%EB%8B%A4\" aria-label=\"최근에 이직한 직장은 ruby on rails를 사용한다 위코드 동기분들 중 루비로 자료구조를 공부하시는 분이 계시길래 필자도 공부할 겸 자료구조를 조악하게나마 구현해보았다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최근에 이직한 직장은 Ruby on Rails를 사용한다. 위코드 동기분들 중, 루비로 자료구조를 공부하시는 분이 계시길래 필자도 공부할 겸 자료구조를 조악하게나마 구현해보았다.</h4>\n<h2 id=\"queue큐-란\"><a href=\"#queue%ED%81%90-%EB%9E%80\" aria-label=\"queue큐 란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Queue(큐) 란?</h2>\n<p><code class=\"language-text\">큐(queue)</code>는 컴퓨터의 기본적인 자료 구조의 한가지로, 먼저 집어 넣은 데이터가 먼저 나오는 <code class=\"language-text\">FIFO</code> <code class=\"language-text\">(First In First Out)</code>구조로 저장하는 형식을 말한다.\n영어 단어 queue는 표를 사러 일렬로 늘어선 사람들로 이루어진 줄을 말하기도 하며, 먼저 줄을 선 사람이 먼저 나갈 수 있는 상황을 연상하면 된다.</p>\n<p>주로 어떠한 작업/데이터를 순서대로 실행/사용하기 위해 대기시킬 때 사용되며 운영체제(OS) 작업관리가 대표적인 예이다.\n서로 다른 쓰레드 사이 또는 프로세스 사이에서나 네트워크를 통해 자료를 주고받을 때 자료를 일시적으로 저장하는 용도로 많이 사용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">  <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomQueue</span>\n    attr_reader <span class=\"token symbol\">:queue</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">initialize</span></span>\n      <span class=\"token variable\">@queue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">end</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">count</span></span>\n      <span class=\"token variable\">@queue</span><span class=\"token punctuation\">.</span>length\n    <span class=\"token keyword\">end</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">empty</span></span><span class=\"token operator\">?</span>\n      count <span class=\"token operator\">?</span> <span class=\"token keyword\">false</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n    <span class=\"token keyword\">end</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">first</span></span>\n      <span class=\"token variable\">@queue</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># @queue.first</span>\n    <span class=\"token keyword\">end</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">last</span></span>\n      <span class=\"token variable\">@queue</span><span class=\"token punctuation\">[</span><span class=\"token variable\">@queue</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># @queue.last</span>\n    <span class=\"token keyword\">end</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">push</span></span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span>\n      <span class=\"token variable\">@queue</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>val<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">end</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">pop</span></span>\n      first_value <span class=\"token operator\">=</span> first\n      <span class=\"token variable\">@queue</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@queue</span><span class=\"token punctuation\">.</span>slice<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span>\n      first_value\n    <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<h4 id=\"사실-구현한다고-이것저것-고민하면서-만들어봤는데-인터프리터-계열-언어는-굳이-큐를-직접-만들어서-쓸거-같진-않다-그냥-이러한-구조라고-이해만-하자\"><a href=\"#%EC%82%AC%EC%8B%A4-%EA%B5%AC%ED%98%84%ED%95%9C%EB%8B%A4%EA%B3%A0-%EC%9D%B4%EA%B2%83%EC%A0%80%EA%B2%83-%EA%B3%A0%EB%AF%BC%ED%95%98%EB%A9%B4%EC%84%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B4%A4%EB%8A%94%EB%8D%B0-%EC%9D%B8%ED%84%B0%ED%94%84%EB%A6%AC%ED%84%B0-%EA%B3%84%EC%97%B4-%EC%96%B8%EC%96%B4%EB%8A%94-%EA%B5%B3%EC%9D%B4-%ED%81%90%EB%A5%BC-%EC%A7%81%EC%A0%91-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%84%9C-%EC%93%B8%EA%B1%B0-%EA%B0%99%EC%A7%84-%EC%95%8A%EB%8B%A4-%EA%B7%B8%EB%83%A5-%EC%9D%B4%EB%9F%AC%ED%95%9C-%EA%B5%AC%EC%A1%B0%EB%9D%BC%EA%B3%A0-%EC%9D%B4%ED%95%B4%EB%A7%8C-%ED%95%98%EC%9E%90\" aria-label=\"사실 구현한다고 이것저것 고민하면서 만들어봤는데 인터프리터 계열 언어는 굳이 큐를 직접 만들어서 쓸거 같진 않다 그냥 이러한 구조라고 이해만 하자 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사실 구현한다고 이것저것 고민하면서 만들어봤는데 인터프리터 계열 언어는 굳이 큐를 직접 만들어서 쓸거 같진 않다. 그냥 이러한 구조라고 이해만 하자!</h4>\n<p>*Reference:<br/>\n<a href=\"https://medium.com/@bing.xie78/learn-ruby-queue-with-examples-3269d1d2a42e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Learn Ruby Queue with Examples</a><br/>\n<a href=\"https://ko.wikipedia.org/wiki/%ED%81%90_(%EC%9E%90%EB%A3%8C_%EA%B5%AC%EC%A1%B0)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">위키백과 - 큐(자료구조)</a><br/>\n<a href=\"https://namu.wiki/w/%ED%81%90(%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">나무위키 - 큐(자료구조)</a><br/></p>","fields":{"slug":"/posts/queue/","tagSlugs":["/tag/data-structure/","/tag/queue/","/tag/wecode/","/tag/위코드/"]},"frontmatter":{"date":"2020-10-27T22:55:32.169Z","description":"Queue 자료구조를 Ruby로 구현해보자!","tags":["Data Structure","Queue","Wecode","위코드"],"title":"Data structure-Queue"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/queue/"}}}