{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL-Day3~5:-DOM과 삽질후기/","webpackCompilationHash":"432f80ce25b1ec32b7fe","result":{"data":{"markdownRemark":{"id":"51053e4b-313a-5331-9076-309cca94180c","html":"<!-- - [The first transition](#the-first-transition) -->\n<p>이번주는 이전에 배운적이 있었던 JS에 대한 전반적인 복습을 하는 과정이었다. 여러가지 부분에 대해서 내가 놓치고 있었던 부분들을 세세하게 되짚어보게 되어서 확실히 이전보다 자바스크립트 자체에 대한 이해(?)가 늘었다고 생각한다. 아무튼 그리하여 3일차 부터 DOM 조작 및 트위터 페이지를 클론하기 시작하였다. </p>\n<h3 id=\"1-template-literal-로-html-태그-생성하지-않기\"><a href=\"#1-template-literal-%EB%A1%9C-html-%ED%83%9C%EA%B7%B8-%EC%83%9D%EC%84%B1%ED%95%98%EC%A7%80-%EC%95%8A%EA%B8%B0\" aria-label=\"1 template literal 로 html 태그 생성하지 않기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Template literal 로 HTML 태그 생성하지 않기</h3>\n<p>사실 이 부분은 개인의 성향이라고 들었기에, 해당 방식으로 작성을 해도 무방하다고 알고있다. 하지만, 이번에 새로 짜보는 페이지에서는, DOM구조에 대한 좀 더 명확한 이해를 하고싶었기에, Template literal을 사용하지 않는 방향으로 정했다. </p>\n<h5 id=\"개인적인-잡상-배우게-될-react의-요소들이-class와-dom-tree를-그대로-사용하게-될-것이기-때문에-구조를-면밀하게-이해하면-디버깅-하는데-좀-더-도움이-되지-않을까-해서-시도해보았다\"><a href=\"#%EA%B0%9C%EC%9D%B8%EC%A0%81%EC%9D%B8-%EC%9E%A1%EC%83%81-%EB%B0%B0%EC%9A%B0%EA%B2%8C-%EB%90%A0-react%EC%9D%98-%EC%9A%94%EC%86%8C%EB%93%A4%EC%9D%B4-class%EC%99%80-dom-tree%EB%A5%BC-%EA%B7%B8%EB%8C%80%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B2%8C-%EB%90%A0-%EA%B2%83%EC%9D%B4%EA%B8%B0-%EB%95%8C%EB%AC%B8%EC%97%90-%EA%B5%AC%EC%A1%B0%EB%A5%BC-%EB%A9%B4%EB%B0%80%ED%95%98%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EB%A9%B4-%EB%94%94%EB%B2%84%EA%B9%85-%ED%95%98%EB%8A%94%EB%8D%B0-%EC%A2%80-%EB%8D%94-%EB%8F%84%EC%9B%80%EC%9D%B4-%EB%90%98%EC%A7%80-%EC%95%8A%EC%9D%84%EA%B9%8C-%ED%95%B4%EC%84%9C-%EC%8B%9C%EB%8F%84%ED%95%B4%EB%B3%B4%EC%95%98%EB%8B%A4\" aria-label=\"개인적인 잡상 배우게 될 react의 요소들이 class와 dom tree를 그대로 사용하게 될 것이기 때문에 구조를 면밀하게 이해하면 디버깅 하는데 좀 더 도움이 되지 않을까 해서 시도해보았다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>개인적인 잡상: 배우게 될 React의 요소들이 class와 DOM Tree를 그대로 사용하게 될 것이기 때문에, 구조를 면밀하게 이해하면 디버깅 하는데 좀 더 도움이 되지 않을까 해서 시도해보았다.</em></h5>\n<h3 id=\"2-기초-조건-이외에-추가적인-기능-구현하기\"><a href=\"#2-%EA%B8%B0%EC%B4%88-%EC%A1%B0%EA%B1%B4-%EC%9D%B4%EC%99%B8%EC%97%90-%EC%B6%94%EA%B0%80%EC%A0%81%EC%9D%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"2 기초 조건 이외에 추가적인 기능 구현하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 기초 조건 이외에 추가적인 기능 구현하기</h3>\n<p>여기서 많은 삽질들이 발생하였다. 아래에 구현 하려고 했던 리스트를 참고하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> textarea 글자수 제한, 글자수 표시\n (글자수를 표시하진 않았다!!! 그냥 alert으로 때워버렸다...)\n \n tweet 버튼 누르면, 아래 트위터에 실제로 추가(최근것이 위로 올라오도록)\n (이건 붙이는 순서가 중요했다)\n \n tweet 개수 왼쪽 프로필에 표시\n (데이터가 하드코딩 되어있었기 때문에, DOM에서 HTML 데이터로 구현했다.)\n 내 tweet 일 경우,  우측에 삭제버튼 활성화\n (삽질 많이 한 부분 1: 사실 시간이 별로 없어서, CSS를 다시 건드릴 엄두가 안나서, 이름 태그에다 활성화 시켰다.)\n \n 삭제버튼 누르면, 해당 tweet 삭제\n (삽질 많이 한 부분 2: 자꾸 하드코딩 된 데이터를 가지고 구현 할 수 있을 줄 알고 삽질을 했다. 데이터 변환 구조를 알아야 할텐데...)\n \n 트윗에 날짜 추가 (2019년 8월 1일)\n (Date class와 친숙해지는 순간!!!)\n \n 가입 id에 영문, 숫자, 최대 글자수 12개 제한\n (삽질 많이 한 부분 3: 정규표현식과 조건 부여 하는 방법 때문에 애를 많이 먹었다.)\n \n 비밀번호, 비밀번호 확인이 같게 / 8 ~ 16자 / 영문, 숫자, 특수문자 최소 1개 포함\n 5칸 다 차야만 가입하기 버튼 ‘가입축하 메시지’\n (삽질 많이 한 부분 4: 이거 왜 했을까... 위에 문제와 똑같은 문제를 겪었음.)\n \n 시간이 남는다면 id, 비밀번호 중복문구 4자리 제한 해보기\n (이건 짧은 시간안에 알고리즘이 생각나지 않아서 일단 건너뛰었다. 다음에 도전하겠음!!!)</code></pre></div>\n<p>이틀 안에 구현 해보려고 하니 참 힘들었다..ㅎㅎㅎㅎㅎ</p>\n<p>삽질을 하면서 느꼈던 점은 아래와 같다.</p>\n<ul>\n<li>함수는 왠만하면 잘게 쪼개자.\n하다보니 동일한 기능이 여러 이벤트에서 사용되어야 할 필요가 많았다. 각 이벤트에 동일한 코드를 넣는 것 보다 상위 범주에서 선언을 한 다음 필요한 구간마다 불러 오는것이 얼마나 효율적인지 이번에 알게 되었다!!</li>\n<li>오타를 조심하자.\n특히 비슷한 조건들을 나열할 때 복사 붙여넣기 하면서 많이 발생했다. 특히 특정 문자만 들어오게끔 제한을 걸때 미리 형식을 붙여넣는 바람에 여러 문제가 발생했다. 붙여넣고 나면 반드시 자세하게 확인 할 것!!!</li>\n<li>데이터 구조를 이해하자.\n하드코딩 되어있는 데이터 셋에서 무언가를 주고 받는다는 것은 정말 힘든 일이라는 것을 알게 되었다. 아직은 접해보지 못한 백엔드 부분을 좀 더 접해보고 싶어졌다.</li>\n</ul>\n<h5 id=\"궁금해-하시지-않으실-것-같지만-js-code만-올려놓겠습니다-엄격한-리뷰를-해주시면-제-발전에-도움이-될-것-같습니다\"><a href=\"#%EA%B6%81%EA%B8%88%ED%95%B4-%ED%95%98%EC%8B%9C%EC%A7%80-%EC%95%8A%EC%9C%BC%EC%8B%A4-%EA%B2%83-%EA%B0%99%EC%A7%80%EB%A7%8C-js-code%EB%A7%8C-%EC%98%AC%EB%A0%A4%EB%86%93%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4-%EC%97%84%EA%B2%A9%ED%95%9C-%EB%A6%AC%EB%B7%B0%EB%A5%BC-%ED%95%B4%EC%A3%BC%EC%8B%9C%EB%A9%B4-%EC%A0%9C-%EB%B0%9C%EC%A0%84%EC%97%90-%EB%8F%84%EC%9B%80%EC%9D%B4-%EB%90%A0-%EA%B2%83-%EA%B0%99%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"궁금해 하시지 않으실 것 같지만 js code만 올려놓겠습니다 엄격한 리뷰를 해주시면 제 발전에 도움이 될 것 같습니다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>**궁금해 하시지 않으실 것 같지만 JS code만 올려놓겠습니다. 엄격한(?) 리뷰를 해주시면 제 발전에 도움이 될 것 같습니다.</h5>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 하드코딩 된 데이터, 여기로 데이터를 쌓아서 렌더링 해보았음.</span>\n\n<span class=\"token keyword\">let</span> userTweets <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        id<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        user<span class=\"token punctuation\">:</span> <span class=\"token string\">'박찬호'</span><span class=\"token punctuation\">,</span>\n        content<span class=\"token punctuation\">:</span> <span class=\"token string\">'제가 LA에 있을때 이야기인데요...'</span><span class=\"token punctuation\">,</span>\n        createdAt<span class=\"token punctuation\">:</span> <span class=\"token string\">'2019년 7월 28일'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        user<span class=\"token punctuation\">:</span> <span class=\"token string\">'장첸'</span><span class=\"token punctuation\">,</span>\n        content<span class=\"token punctuation\">:</span> <span class=\"token string\">'혼자왔니?'</span><span class=\"token punctuation\">,</span>\n        createdAt<span class=\"token punctuation\">:</span> <span class=\"token string\">'2018년 11월 22일'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        id<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        user<span class=\"token punctuation\">:</span> <span class=\"token string\">'마석도'</span><span class=\"token punctuation\">,</span>\n        content<span class=\"token punctuation\">:</span> <span class=\"token string\">'어, 아직 싱글이야'</span><span class=\"token punctuation\">,</span>\n        createdAt<span class=\"token punctuation\">:</span> <span class=\"token string\">'2018년 11월 22일'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        id<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n        user<span class=\"token punctuation\">:</span> <span class=\"token string\">'누구지'</span><span class=\"token punctuation\">,</span>\n        content<span class=\"token punctuation\">:</span> <span class=\"token string\">'ㅎㅇ'</span><span class=\"token punctuation\">,</span>\n        createdAt<span class=\"token punctuation\">:</span> <span class=\"token string\">'2019년 8월 1일'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> deprecatedData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>   id <span class=\"token punctuation\">:</span> <span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span>\n        deprecatedAt <span class=\"token punctuation\">:</span> <span class=\"token string\">'시간'</span><span class=\"token punctuation\">,</span>\n        data <span class=\"token punctuation\">:</span> userTweets\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">//회원가입 페이지</span>\n\n<span class=\"token keyword\">const</span> putNewUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> fetchID <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> fetchName <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> fetchPassword <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> fetchCheckPassword <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'check_password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> fetchProfile <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'profile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> fetchSubmitBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit_button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> id_Result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        chars<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        numbers<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">let</span> name_Result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        chars<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">let</span> password_Result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        symbols<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        chars<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        numbers<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">id_Logic</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fetchID<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">&amp;&amp;</span> fetchID<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fetchID<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[A-z]/g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                id_Result<span class=\"token punctuation\">.</span>chars <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fetchID<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[0-9]/g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                id_Result<span class=\"token punctuation\">.</span>numbers <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">name_Logic</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fetchName<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> fetchName<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fetchName<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[ㄱ-힣]/g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                name_Result<span class=\"token punctuation\">.</span>chars <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">password_Logic</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">const</span> password_datum <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>fetchPassword<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> _symbols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\"'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"$\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"+\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span>\n            <span class=\"token punctuation\">,</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\";\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"=\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"?\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"@\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"[\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\\\\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"^\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"_\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"`\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"{\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"|\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"}\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"~\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fetchPassword<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">7</span> <span class=\"token operator\">&amp;&amp;</span> fetchPassword<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            _symbols<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sym</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>password_datum<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>sym<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    password_Result<span class=\"token punctuation\">.</span>symbols <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fetchPassword<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[A-z]/g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                password_Result<span class=\"token punctuation\">.</span>chars <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fetchPassword<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[0-9]/g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                password_Result<span class=\"token punctuation\">.</span>numbers <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addUser</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> new_User <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">id_Logic</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">name_Logic</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">password_Logic</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id_Result<span class=\"token punctuation\">.</span>chars<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ID는 6자 이상, 12자 이하의 영문 및 숫자를 포함하여야 합니다!'</span><span class=\"token punctuation\">)</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id_Result<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ID는 6자 이상, 12자 이하의 영문 및 숫자를 포함하여야 합니다!'</span><span class=\"token punctuation\">)</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>name_Result<span class=\"token punctuation\">.</span>chars<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'이름을 입력해 주세요(한글)'</span><span class=\"token punctuation\">)</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fetchPassword<span class=\"token punctuation\">.</span>value <span class=\"token operator\">!==</span> fetchCheckPassword<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'비밀번호가 일치하지 않습니다!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>password_Result<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'비밀번호는 8자 이상, 16자 이하의 숫자, 특수문자 및 영문을 포함하여야 합니다!'</span><span class=\"token punctuation\">)</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>password_Result<span class=\"token punctuation\">.</span>chars<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'비밀번호는 8자 이상, 16자 이하의 숫자, 특수문자 및 영문을 포함하여야 합니다!'</span><span class=\"token punctuation\">)</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>password_Result<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'비밀번호는 8자 이상, 16자 이하의 숫자, 특수문자 및 영문을 포함하여야 합니다!'</span><span class=\"token punctuation\">)</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            new_User<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fetchID<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n            new_User<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fetchName<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n            new_User<span class=\"token punctuation\">[</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fetchPassword<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n            new_User<span class=\"token punctuation\">[</span><span class=\"token string\">'profile'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fetchProfile<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n            newUsers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>new_User<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            fetchID<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            fetchName<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            fetchPassword<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            fetchCheckPassword<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            fetchProfile<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n            id_Result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                symbols<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n                chars<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n                numbers<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">}</span>\n\n            name_Result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                chars<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">}</span>\n\n            password_Result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                symbols<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n                chars<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n                numbers<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'트위터에 가입 하신것을 축하드립니다!!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'./tweets.html'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n    fetchSubmitBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> addUser<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token comment\">//tweet 로그인 후 메인 페이지</span>\n\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span>로그인 페이지로 가기\n<span class=\"token keyword\">const</span> goToHome <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> fetchBlue <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">homeURL</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'./login.html'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    fetchBlue<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> homeURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span>날짜<span class=\"token punctuation\">,</span> 시간 생성<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createdWhen</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> time <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> currentYear <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> currentMonth <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> currentDate <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentYear<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">년 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentMonth<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">월 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentDate<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">일</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 300자 검사.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">tweet_boxCounter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> getTweetBox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tweet_box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>getTweetBox<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> getTweetBox<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">301</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'트윗은 0자 이상 300자 이하로 작성 해주셔야 합니다!!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> user_tweet에 붙이기\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span>데이터에서 기존에 등록된 tweet 불러오기\n<span class=\"token keyword\">const</span> generateTweet <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    userTweets<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">datum</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">/</span>tweet data 업로드\n        <span class=\"token keyword\">const</span> pForTop <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> pForContent <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> spanForName <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> spanForTime <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> divForUser_tweet <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> getTweets <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tweets'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        divForUser_tweet<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'user_tweet'</span>\n        pForTop<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'top'</span><span class=\"token punctuation\">;</span>\n        spanForName<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">;</span>\n        spanForTime<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'date'</span><span class=\"token punctuation\">;</span>\n        pForContent<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'your_text'</span><span class=\"token punctuation\">;</span>\n        spanForName<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> `$<span class=\"token punctuation\">{</span>datum<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">}</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">;\n        //자기 이름칸에 mouse 이벤트 활성화\n        if (spanForName.innerText === 'Choi,Seung-youn') {\n            spanForName.style.cursor = \"pointer\"\n        }\n        spanForTime.innerText = </span><span class=\"token template-punctuation string\">`</span></span>$<span class=\"token punctuation\">{</span>datum<span class=\"token punctuation\">.</span>createdAt<span class=\"token punctuation\">}</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">;\n        pForContent.innerText = datum.content;\n        divForUser_tweet.appendChild(pForTop);\n        divForUser_tweet.appendChild(pForContent);\n        pForTop.appendChild(spanForName);\n        pForTop.appendChild(spanForTime);\n        getTweets.insertAdjacentElement('afterbegin', divForUser_tweet);\n        //tweet counter 세기\n        const getTweetCounter = document.getElementsByClassName('tweet_counter')[0];\n        if (datum.user === 'Choi,Seung-youn') {\n            counter = counter + 1;\n            getTweetCounter.innerText = counter;\n        }\n    })\n})();\n\n//tweet_box에서 tweet 작성데이터 불러오기.\nconst addTweet = (e) => {\n    //글자 검사. 0개이거나 300자 이상이면 포스팅 거부.\n    const isTweetTrue = tweet_boxCounter(e);\n    if (!isTweetTrue) {\n        return;\n    }\n    //tweet_box 새 글 추가.\n    const pForTop = document.createElement('p');\n    const pForContent = document.createElement('p');\n    const spanForName = document.createElement('span');\n    const spanForTime = document.createElement('span');\n    const divForUser_tweet = document.createElement('div');\n    const getTweets = document.getElementById('tweets');\n    const getTweetBox = document.getElementById('tweet_box');\n    divForUser_tweet.className = 'user_tweet'\n    pForTop.className = 'top';\n    spanForName.className = 'name';\n    spanForTime.className = 'date';\n    pForContent.className = 'your_text';\n    spanForName.innerText = </span><span class=\"token template-punctuation string\">`</span></span>Choi<span class=\"token punctuation\">,</span>Seung<span class=\"token operator\">-</span>youn<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">;\n    spanForTime.innerText = </span><span class=\"token template-punctuation string\">`</span></span>$<span class=\"token punctuation\">{</span><span class=\"token function\">createdWhen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">;\n    pForContent.innerText = getTweetBox.value;\n    //자기 이름칸에 mouse 이벤트 활성화\n    if (spanForName.innerText === 'Choi,Seung-youn') {\n        spanForName.style.cursor = \"pointer\";\n        spanForName.addEventListener('click', do_Delete, false);\n    }\n    divForUser_tweet.appendChild(pForTop);\n    divForUser_tweet.appendChild(pForContent);\n    pForTop.appendChild(spanForName);\n    pForTop.appendChild(spanForTime);\n    getTweets.insertAdjacentElement('afterbegin', divForUser_tweet);\n    // userTweets에 데이터 추가하기.\n    userTweets.push({\n        id: userTweets[userTweets.length - 1].id + 1,\n        user: 'Choi,Seung-youn',\n        content: </span><span class=\"token template-punctuation string\">`</span></span>$<span class=\"token punctuation\">{</span>getTweetBox<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">,\n        createdAt: </span><span class=\"token template-punctuation string\">`</span></span>$<span class=\"token punctuation\">{</span><span class=\"token function\">createdWhen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>`\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">//tweet counter 조작.</span>\n    <span class=\"token keyword\">const</span> getTweetCounter <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tweet_counter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>getTweetCounter<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    counter <span class=\"token operator\">=</span> counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    getTweetCounter<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> counter<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//tweet_box 데이터 삭제</span>\n    getTweetBox<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//새로 포스팅된 트윗에도 삭제 기능 부여</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//addTweet 활성화.</span>\n<span class=\"token keyword\">const</span> uploadNewTweet <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> getTweetButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tweet_button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    getTweetButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> addTweet<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//deleteMyTweet 활성화</span>\n<span class=\"token keyword\">const</span> findUserName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> nameList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> getUserName <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user_name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nameList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        nameList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'target'</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>getUserName<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">// console.log(e.target)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>getUserName<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">===</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">do_Delete</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//트윗 삭제 기능.</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">do_Delete</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 쓰레기통으로 직행.</span>\n    deprecatedData<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        id<span class=\"token punctuation\">:</span> userTweets<span class=\"token punctuation\">[</span>userTweets<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n        deprecatedAt<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token punctuation\">:</span> userTweets\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//tweet counter 조작.</span>\n    <span class=\"token keyword\">const</span> getTweetCounter <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tweet_counter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>getTweetCounter<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    counter <span class=\"token operator\">=</span> counter <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    getTweetCounter<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> counter<span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","fields":{"slug":"/posts/TIL-Day3~5:-DOM과 삽질후기/","tagSlugs":["/tag/html/","/tag/css/","/tag/class/","/tag/javascript/","/tag/dom/"]},"frontmatter":{"date":"2019-08-02T22:40:32.169Z","description":"DOM을 사용하여 Twitter 간단하게 clone하기.","tags":["HTML","CSS","class","Javascript","DOM"],"title":"TIL - Day3~5: DOM과 삽질후기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/TIL-Day3~5:-DOM과 삽질후기/"}}}